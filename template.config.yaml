# Must change: token, user_groups:admins:ids
telegram:
  token: 'enter your telegram token here'  # Search for Botfather in your favorite search engine for instructions
  rejected_message: "Unauthorized user :p" # Message to return to users not in any group when talking to the bot. Empty string for silently ignoring them instead
  user_groups:                     # See README.md for explanation on user groups
    admins:                        # There can be any number of device groups and names (e.g. admins, family, guests) are free-form
      ids: [ 0, 1, 2 ]             # See README.md for how to get a user id
      access_level: ADMIN          # Possible values: ADMIN, SECURITY, DEVICE, NONE. see README.md for details
      device_groups: [ "all" ]     # Device groups are defined in hubitat:device_groups below
    family:                        # The "family" and "guests" groups can be deleted or renamed if not of any use.
      ids: [ ]
      access_level: SECURITY
      device_groups: [ "regular" ]
    guests:
      ids: [ ]
      access_level: DEVICE
      device_groups: [ "limited" ]

# Must change: url, appid, token
hubitat:
  url: 'http://ipaddress/'               # What you type in the browser to log on to Hubitat
  appid: 123                             # Log in to Hubitat, go in Apps, Maker API. The Id in is in the url
  token: 'enter your hubitat token here' # Log in to Hubitat, go in Apps, Maker API, The token is in the examples
  case_insensitive: true                 # If true, "/on office" turns on device "Office". Switch to false if some devices only differ by case
  device_name_separator: ','             # Separator used for specifying multiple devices, e.g., "/on device1,device2" for "/on device1" and "/on device2"
  # List of available values for the "/arm" command
  hsm_arm_values: ['armAway', 'armHome', 'armNight', 'disarm', 'disarmAll', 'armAll', 'cancelAlerts']
  # Aliases allow for replacing the named target of a command when the name does not exist but its replacement does.
  # For example, if there is no device called "office" but there's one called "office light", an alias for
  # device replacing "office" with "office light" will allow for the "/on office" command to succeed.
  # Aliases are entered as a list of pairs (matching regex, replacement) where
  # \\n with n a number in the replacement string corresponds to the n'th captured string captured by the regex.
  # Note: all aliases are case insensitive
  aliases:
    # Applies to all device commands, such as /on, /off, /open, /close, /dim, /status, ...
    # Eith this example, "/on office" => "/on office light" and "/off hw" => "/off hot water"
    device: [ [ "^(.*)$", "\\1 Light" ], [ "^(.*) Closet$", "\\1 Walking Closet Light" ], [ "^hw$", "Hot Water" ], ["keybox", "key box"] ]
    # Applies to the /mode command. With this example, "/mode guest" => "/mode guests"
    mode: [ [ "Guest", "Guests" ] ]
    # Applies to the /arm command. With this example, "/arm home" => "/arm armHome"
    hsm: [ [ "^(.*)$", "arm\\1"]]

  # Optional descriptions for devices; description is returned by the /list & /info commands
  device_descriptions:
    12345: "description for device id 12345"
  device_groups:                # See README.md for explanation on device groups
    all:                        # Names are free-form and referenced by telegram:user_groups:<something>:device_groups
      allowed_device_ids:  [ ]  # List of Hubitat device ids to allow. If empty, all are allowed unless explicitly rejected 
      rejected_device_ids: [ ]  # List of Hubitat device ids to reject
    regular:                    # In this example, the 'regular' device group includes all devices exposed by Hubitat's MakerAPI but the device with Id 789
      allowed_device_ids:  [ ]
      rejected_device_ids: [ 789 ]
    limited:                    # In this example, the 'limited' device group only includes devices exposed by Hubitat with Id 123 or 456
      allowed_device_ids:  [ 123, 456 ]
      rejected_device_ids: [ ]

main:
  logverbosity: WARNING  # Possible values: DEBUG, INFO, WARNING, ERROR, CRITICAL
  # Default timezone for commands returning datetimes (e.g., the /events command), for example "America/Los_Angeles"
  # Users can deviate from default value with the /timezone command
  # The list of possible values is here: https://github.com/newvem/pytz/blob/master/pytz/__init__.py#L327
  default_timezone: "UTC"

